# Generated by Django 5.1.6 on 2025-03-26 17:44

import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artikel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikelnr', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('lieferantenartikel', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('aussenbreite', models.IntegerField(blank=True, null=True)),
                ('aussenhöhe', models.IntegerField(blank=True, null=True)),
                ('nettopreis', models.FloatField(blank=True, null=True)),
                ('zubehoerartikelnr', models.CharField(blank=True, max_length=255, null=True)),
                ('lagerbestand', models.IntegerField(blank=True, default=0, null=True)),
                ('lagerort', models.CharField(blank=True, max_length=255, null=True)),
                ('bestpreis', models.FloatField(blank=True, null=True)),
                ('lieferanten_artikelnummern', models.CharField(blank=True, max_length=255, null=True)),
                ('dichtungstypen', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Artikel',
                'verbose_name_plural': 'Artikel',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('categorypic', models.ImageField(blank=True, null=True, upload_to='produktbilder/')),
            ],
            options={
                'verbose_name': 'Kategorie',
                'verbose_name_plural': 'Kategorien',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Elemente_Bestellungen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('kunden_nr', models.CharField(blank=True, max_length=255, null=True)),
                ('montage', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('offen', 'offen'), ('bestellt', 'bestellt'), ('bei Lieferant', 'bei Lieferant'), ('erledigt', 'erledigt')], default='offen', max_length=20, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Elemente Bestellung',
                'verbose_name_plural': 'Elemente Bestellungen',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Lieferanten',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('adresse', models.CharField(blank=True, max_length=255, null=True)),
                ('plz', models.CharField(blank=True, max_length=255, null=True)),
                ('ort', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Lieferant',
                'verbose_name_plural': 'Lieferanten',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Preiscode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preiscode', models.CharField(max_length=255, unique=True)),
                ('faktor', models.FloatField(blank=True, null=True)),
                ('transportkosten', models.IntegerField(blank=True, null=True)),
                ('rabatt', models.IntegerField(blank=True, null=True)),
                ('preisanpassung', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Preiscode',
                'verbose_name_plural': 'Preiscodes',
                'ordering': ['preiscode'],
            },
        ),
        migrations.CreateModel(
            name='ShippingCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_from', models.FloatField(blank=True, null=True)),
                ('price_to', models.FloatField(blank=True, null=True)),
                ('shipping_price', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_name', models.CharField(max_length=255)),
                ('sub_slug', models.SlugField(max_length=255)),
            ],
            options={
                'verbose_name': 'Subkategorie',
                'verbose_name_plural': 'Subkategorien',
                'ordering': ['sub_name'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rechnung_strasse', models.CharField(max_length=255)),
                ('rechnung_nr', models.CharField(max_length=255)),
                ('rechnung_ort', models.CharField(max_length=255)),
                ('rechnung_land', django_countries.fields.CountryField(max_length=2)),
                ('rechnung_plz', models.CharField(max_length=255)),
                ('address_type', models.CharField(choices=[('B', 'Rechnungsadresse'), ('S', 'Lieferadresse')], max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rechnungsadresse',
                'verbose_name_plural': 'Rechnungsadressen',
            },
        ),
        migrations.CreateModel(
            name='Elemente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementnr', models.IntegerField(blank=True, null=True)),
                ('kuehlposition', models.CharField(max_length=255)),
                ('bemerkung', models.CharField(blank=True, max_length=255, null=True)),
                ('aussenbreite', models.IntegerField(blank=True, null=True)),
                ('aussenhöhe', models.IntegerField(blank=True, null=True)),
                ('produkt', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('nettopreis', models.CharField(blank=True, max_length=255, null=True)),
                ('bezeichnung', models.CharField(blank=True, max_length=255, null=True)),
                ('artikel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artikel_elemente', to='store.artikel')),
            ],
            options={
                'verbose_name': 'Element',
                'verbose_name_plural': 'Elemente',
                'ordering': ['elementnr'],
            },
        ),
        migrations.CreateModel(
            name='ElementeCartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anzahl', models.PositiveIntegerField(verbose_name='Anzahl')),
                ('artikel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elementebestellung_artikel', to='store.artikel')),
                ('element_nr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elemente_cart_items', to='store.elemente')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elementeitems_bestellung', to='store.elemente_bestellungen')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=255)),
                ('preis', models.FloatField()),
                ('preis2', models.FloatField(blank=True, null=True)),
                ('preis3', models.FloatField(blank=True, null=True)),
                ('preis4', models.FloatField(blank=True, null=True)),
                ('preis5', models.FloatField(blank=True, null=True)),
                ('preis6', models.FloatField(blank=True, null=True)),
                ('preis7', models.FloatField(blank=True, null=True)),
                ('kurzbeschreibung', models.CharField(default='', max_length=500)),
                ('beschreibung', models.CharField(default='', max_length=500)),
                ('lieferung', models.CharField(blank=True, default='ca. 5 bis 7 Tage', max_length=255, null=True)),
                ('montage', models.CharField(blank=True, max_length=255, null=True)),
                ('titelbild', models.ImageField(blank=True, null=True, upload_to='produktbilder/')),
                ('slug', models.SlugField(max_length=255)),
                ('artikelnr', models.CharField(max_length=255)),
                ('farbe', models.CharField(blank=True, max_length=255, null=True)),
                ('nut', models.CharField(blank=True, max_length=255, null=True)),
                ('falz', models.CharField(blank=True, max_length=255, null=True)),
                ('falzluft', models.CharField(blank=True, max_length=255, null=True)),
                ('fuge', models.CharField(blank=True, max_length=255, null=True)),
                ('glasdicke', models.CharField(blank=True, max_length=255, null=True)),
                ('material', models.CharField(blank=True, max_length=255, null=True)),
                ('hersteller', models.CharField(blank=True, max_length=255, null=True)),
                ('sortierung', models.IntegerField(blank=True, null=True)),
                ('kategorie', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.category')),
                ('subkategorie', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.subcategory')),
            ],
            options={
                'verbose_name': 'Produkte',
                'verbose_name_plural': 'Produkte',
                'ordering': ['sortierung'],
            },
        ),
        migrations.AddField(
            model_name='elemente',
            name='dichtungen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.item'),
        ),
        migrations.CreateModel(
            name='Kunde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firmenname', models.CharField(blank=True, max_length=255, null=True)),
                ('rabatt', models.FloatField(blank=True, null=True)),
                ('newsletter', models.BooleanField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('birthday', models.CharField(blank=True, max_length=255, null=True)),
                ('interne_nummer', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('vorname', models.CharField(blank=True, max_length=255, null=True)),
                ('nachname', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_service', models.DateTimeField(blank=True, null=True)),
                ('zusatz', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kunde',
                'verbose_name_plural': 'Kunden',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='elemente',
            name='kunde',
            field=models.ManyToManyField(blank=True, related_name='kunden_elemente', to='store.kunde'),
        ),
        migrations.CreateModel(
            name='CRMAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crm_strasse', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_nr', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_ort', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_land', django_countries.fields.CountryField(max_length=2)),
                ('crm_plz', models.CharField(blank=True, max_length=255, null=True)),
                ('crm_kanton', models.CharField(blank=True, choices=[('Aargau', 'Aargau'), ('Appenzell Innerrhoden', 'Appenzell Innerrhoden'), ('Appenzell Ausserrhoden', 'Appenzell Ausserrhoden'), ('Bern', 'Bern'), ('Basel-Landschaft', 'Basel-Landschaft'), ('Basel-Stadt', 'Basel-Stadt'), ('Freiburg', 'Freiburg'), ('Genf', 'Genf'), ('Glarus', 'Glarus'), ('Graubünden', 'Graubünden'), ('Jura', 'Jura'), ('Luzern', 'Luzern'), ('Neuenburg', 'Neuenburg'), ('Nidwalden', 'Nidwalden'), ('Obwalden', 'Obwalden'), ('St. Gallen', 'St. Gallen'), ('Schaffhausen', 'Schaffhausen'), ('Solothurn', 'Solothurn'), ('Schwyz', 'Schwyz'), ('Thurgau', 'Thurgau'), ('Tessin', 'Tessin'), ('Uri', 'Uri'), ('Waadt', 'Waadt'), ('Wallis', 'Wallis'), ('Zug', 'Zug'), ('Zürich', 'Zürich')], default='Zürich', max_length=255, null=True)),
                ('address_type', models.CharField(blank=True, choices=[('B', 'Rechnungsadresse'), ('S', 'Lieferadresse')], max_length=500, null=True)),
                ('kunde', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kunde_address', to='store.kunde')),
            ],
            options={
                'verbose_name': 'CRM-Adresse',
                'verbose_name_plural': 'CRM-Adressen',
            },
        ),
        migrations.AddField(
            model_name='elemente',
            name='lieferant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='elemente_lieferanten', to='store.lieferanten'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='bestpreis_lieferant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artikel_lieferanten_bestpreis', to='store.lieferanten'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='lieferant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artikel_lieferanten', to='store.lieferanten'),
        ),
        migrations.CreateModel(
            name='LieferantenBestellungen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('kunden_nr', models.CharField(blank=True, max_length=255, null=True)),
                ('lieferant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lieferanten_id', to='store.lieferanten')),
            ],
            options={
                'verbose_name': 'Lieferanten-Bestellung',
                'verbose_name_plural': 'Lieferanten-Bestellungen',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LieferantenBestellungenArtikel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anzahl', models.PositiveIntegerField(verbose_name='Anzahl')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lieferanten_artikel', to='store.artikel')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artikel_bestellungen', to='store.lieferantenbestellungen')),
            ],
        ),
        migrations.CreateModel(
            name='LieferantenStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_updates', to='store.lieferantenbestellungen')),
            ],
        ),
        migrations.AddField(
            model_name='lieferantenbestellungen',
            name='status',
            field=models.ManyToManyField(blank=True, related_name='bestellungen_status', to='store.lieferantenstatus'),
        ),
        migrations.CreateModel(
            name='Marke',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('markepic', models.ImageField(blank=True, null=True, upload_to='markebilder/')),
                ('marketext', models.TextField(blank=True)),
                ('item', models.ManyToManyField(blank=True, related_name='item_marken', to='store.item')),
            ],
            options={
                'verbose_name': 'Marke',
                'verbose_name_plural': 'Marken',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CRMLager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(blank=True, max_length=255, null=True)),
                ('aussenbreite', models.IntegerField(blank=True, null=True)),
                ('aussenhöhe', models.IntegerField(blank=True, null=True)),
                ('dichtungstyp', models.CharField(blank=True, max_length=255, null=True)),
                ('lagerort', models.CharField(blank=True, max_length=255, null=True)),
                ('lagerbestand', models.IntegerField(blank=True, default=1, null=True)),
                ('marke', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lager_marke', to='store.marke')),
            ],
            options={
                'verbose_name': 'CRM-Lager',
                'verbose_name_plural': 'CRM-Lagerbestände',
            },
        ),
        migrations.CreateModel(
            name='Objekte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('serie', models.CharField(blank=True, max_length=255, null=True)),
                ('modell', models.CharField(blank=True, max_length=255, null=True)),
                ('typ', models.CharField(blank=True, max_length=255, null=True)),
                ('lieferant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objekte_lieferanten', to='store.lieferanten')),
                ('objekte', models.ManyToManyField(blank=True, related_name='elemente_objekte', to='store.elemente')),
            ],
            options={
                'verbose_name': 'Objekt',
                'verbose_name_plural': 'Objekte',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('aussenbreite', models.IntegerField(blank=True, default=250, null=True)),
                ('aussenhöhe', models.IntegerField(blank=True, default=250, null=True)),
                ('element', models.IntegerField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='artikel',
            name='preiscode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artikel_preiscode', to='store.preiscode'),
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lieferung_strasse', models.CharField(max_length=255)),
                ('lieferung_nr', models.CharField(max_length=255)),
                ('lieferung_ort', models.CharField(max_length=255)),
                ('lieferung_land', django_countries.fields.CountryField(max_length=2)),
                ('lieferung_plz', models.CharField(max_length=255)),
                ('address_type', models.CharField(choices=[('B', 'Rechnungsadresse'), ('S', 'Lieferadresse')], max_length=500)),
                ('vorname', models.CharField(blank=True, max_length=255, null=True)),
                ('nachname', models.CharField(blank=True, max_length=255, null=True)),
                ('firmenname', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lieferadresse',
                'verbose_name_plural': 'Lieferadressen',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField()),
                ('ordered', models.BooleanField(default=False)),
                ('payment', models.BooleanField(default=False)),
                ('payment_method', models.CharField(choices=[('R', 'Rechnung*'), ('V', 'Vorkasse (2% Skonto)')], default='R', max_length=255)),
                ('shippingcost', models.FloatField(blank=True, default=0, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('discount_pct', models.FloatField(blank=True, null=True)),
                ('skonto', models.FloatField(blank=True, null=True)),
                ('pre_total', models.FloatField(blank=True, null=True)),
                ('order_mwst', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_address', to='store.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(to='store.orderitem')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_address', to='store.shippingaddress')),
            ],
            options={
                'verbose_name': 'Bestellung',
                'verbose_name_plural': 'Bestellungen',
                'ordering': ['-ordered_date'],
            },
        ),
    ]
